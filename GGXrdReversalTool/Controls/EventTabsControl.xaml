<local:NotifiedUserControl x:Class="GGXrdReversalTool.Controls.EventTabsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GGXrdReversalTool.Controls"
             xmlns:viewModels="clr-namespace:GGXrdReversalTool.ViewModels"
             mc:Ignorable="d" 
             x:Name="Control"
             d:DesignHeight="300" d:DesignWidth="300">
    <local:NotifiedUserControl.Resources>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
        <Style x:Key="TabControlSingleLineStyle" TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Hidden">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid x:Name="ScrollViewerGrid">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="32px" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Column="0"/>
                                            <ScrollBar
                                                Margin="3,0,0,0"
                                                x:Name="PART_HorizontalScrollBar"
                                                Orientation="Horizontal"
                                                Grid.Column="1"
                                                Value="{TemplateBinding HorizontalOffset}"
                                                Maximum="{TemplateBinding ScrollableWidth}"
                                                ViewportSize="{TemplateBinding ViewportWidth}"
                                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <StackPanel VerticalAlignment="Bottom" Orientation="Horizontal" x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                            </ScrollViewer>
                            <Border x:Name="contentPanel" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </local:NotifiedUserControl.Resources>
    <TabControl x:Name="TabControl" Style="{DynamicResource TabControlSingleLineStyle}" ItemsSource="{Binding ElementName=Control, Path=Tabs}" SelectedItem="{Binding ElementName=Control, Path=SelectedItem, Mode=TwoWay}">
        <TabControl.ItemTemplate>
            <DataTemplate>
                <StackPanel Orientation="Horizontal" ToolTipService.ToolTip="Each event houses its own set of slots, each with its own action. After clicking the 'Enable' button, all events will work simultaneously.">
                    <TextBlock Text="{Binding TabName}"/>
                    <Button Margin="3,0,0,0" Click="OnTabCrossmarkClick" Tag="{Binding Index}"
                            Visibility="{Binding ShowCrossmark, Converter={StaticResource VisibilityCollapsedConverter}}"
                            IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:EventTabsControl}}, Path=IsTabContentEnabled}">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Rectangle Width="14" Height="14" Stroke="Black" Fill="Transparent" StrokeThickness="0" x:Name="ButtonRectangle"/>
                                    <Line X1="3" Y1="3" X2="11" Y2="11" Stroke="Black" StrokeThickness="2" x:Name="ButtonLine1"/>
                                    <Line X1="11" Y1="3" X2="3" Y2="11" Stroke="Black" StrokeThickness="2" x:Name="ButtonLine2"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Rectangle.StrokeThickness" Value="1" TargetName="ButtonRectangle"/>
                                    </Trigger>
                                    <Trigger Property="Button.IsPressed" Value="True">
                                        <Setter Property="Rectangle.StrokeThickness" Value="1" TargetName="ButtonRectangle"/>
                                        <Setter Property="Rectangle.Fill" Value="LightGray" TargetName="ButtonRectangle"/>
                                        <Setter Property="Line.Y1" Value="4" TargetName="ButtonLine1"/>
                                        <Setter Property="Line.Y2" Value="12" TargetName="ButtonLine1"/>
                                        <Setter Property="Line.Y1" Value="4" TargetName="ButtonLine2"/>
                                        <Setter Property="Line.Y2" Value="12" TargetName="ButtonLine2"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </StackPanel>
            </DataTemplate>
        </TabControl.ItemTemplate>
        <TabControl.ContentTemplate>
            <DataTemplate>
                <local:EventControl IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:EventTabsControl}}, Path=IsTabContentEnabled}" ControlData="{Binding ControlData}"/>
            </DataTemplate>
        </TabControl.ContentTemplate>
    </TabControl>
</local:NotifiedUserControl>
