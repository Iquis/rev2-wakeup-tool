<local:NotifiedUserControl x:Class="GGXrdReversalTool.Controls.BlockSwitchingControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GGXrdReversalTool.Controls"
             mc:Ignorable="d" 
             x:Name="Control"
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid Margin="5,5,5,5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <TextBlock Text="Block sequence :" VerticalAlignment="Center"/>
            <Image HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5" Source="../Images/question.png" Height="16"
                ToolTipService.ToolTip="Block switching works only when you enable the scenario on the 'Scenario' tab using the 'Enable' button.&#10;Warning: crouching stance generates a monotonous '2' (Down) input in the input buffer with the implication that rapid switching to/from crouch produces 22222 inputs that can be interpreted as a special.&#10;Warning: in order for pushback to be consistent with the type of block that was used, all block type changes are applied with a 1 frame delay."/>
        </StackPanel>
        <TextBox x:Name="TextBoxControl" Grid.Row="1" Height="60" Text="{Binding ElementName=Control, Path=BlockSwitchingText, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" IsEnabled="{Binding IsRunning, Converter={StaticResource AntiBooleanConverter}}" SelectionChanged="TextBoxControl_SelectionChanged"/>
        <StackPanel Grid.Row="2" HorizontalAlignment="Center" Margin="0,5,0,0" Orientation="Horizontal" IsEnabled="{Binding IsRunning, Converter={StaticResource AntiBooleanConverter}}">
            <Button Content="Add New Element" Command="{Binding ElementName=Control, Path=AddNewElementCommand}"/>
            <Button Content="Edit Current Element" Margin="35,0,0,0" Command="{Binding ElementName=Control, Path=EditCurrentElementCommand}" ToolTipService.ToolTip="The current element is determined by where the text caret is."/>
            <TextBlock Text="Block hit counter expiry (in frames):" Margin="35,0,5,0" VerticalAlignment="Center"/>
            <local:NumericTextInput Width="60" Text="{Binding ElementName=Control, Path=BlockTimerText, Mode=TwoWay}"/>
            <Image HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5" Source="../Images/question.png" Height="16" ToolTipService.ToolTip="This timer determines for how long after blockstun has ended we treat the next hit as part of the same block sequence.&#10;It also affects the blocked hit counter for Events of type 'Blocked a certain hit' on the 'Scenario' tab.&#10;Default value is 30."/>
            <CheckBox Content="Looping" IsChecked="{Binding ElementName=Control, Path=IsLooping}" Margin="10,0,0,0" VerticalAlignment="Center"/>
            <Image HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5" Source="../Images/question.png" Height="16" ToolTipService.ToolTip="Looping means that if the actually performed block sequence is longer than the one you specified, it loops back to the first hit.&#10;Without this, it just stops changing any settings and only loops back once the block timer expires."/>
        </StackPanel>
        <ItemsControl ItemsSource="{Binding ElementName=Control, Path=BlockSwitchingElements}" Grid.Row="3" Margin="0,5,0,0">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <local:BlockSwitchingElementControl BlockSwitchingElementData="{Binding}" Interactive="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:BlockSwitchingControl}}, Path=IsRunning, Converter={StaticResource AntiBooleanConverter}}"
                        ElementClickCommand="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:BlockSwitchingControl}}, Path=ElementClickCommand}"
                        ElementDoubleClickCommand="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:BlockSwitchingControl}}, Path=ElementDoubleClickCommand}"
                        ElementEditCommand="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:BlockSwitchingControl}}, Path=ElementEditCommand}"
                        ElementDeleteCommand="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:BlockSwitchingControl}}, Path=ElementDeleteCommand}"
                        ElementInsertNewAfterCommand="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:BlockSwitchingControl}}, Path=ElementInsertNewAfterCommand}"
                        ElementInsertNewBeforeCommand="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:BlockSwitchingControl}}, Path=ElementInsertNewBeforeCommand}"
                        ElementMoveLeftCommand="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:BlockSwitchingControl}}, Path=ElementMoveLeftCommand}"
                        ElementMoveRightCommand="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:BlockSwitchingControl}}, Path=ElementMoveRightCommand}"
                    />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</local:NotifiedUserControl>
